In file included from main.cpp:1:
os_interface.cpp:44:1: error: 'Scheduler' does not name a type
   44 | Scheduler* os_scheduler = nullptr;
      | ^~~~~~~~~
os_interface.cpp:59:26: error: 'ProcessState' was not declared in this scope
   59 | static const std::vector<ProcessState> stateOrder = {
      |                          ^~~~~~~~~~~~
os_interface.cpp:59:38: error: template argument 1 is invalid
   59 | static const std::vector<ProcessState> stateOrder = {
      |                                      ^
os_interface.cpp:59:38: error: template argument 2 is invalid
os_interface.cpp:60:5: error: 'ProcessState' has not been declared
   60 |     ProcessState::IDLE,
      |     ^~~~~~~~~~~~
os_interface.cpp:61:5: error: 'ProcessState' has not been declared
   61 |     ProcessState::WAITING,
      |     ^~~~~~~~~~~~
os_interface.cpp:62:5: error: 'ProcessState' has not been declared
   62 |     ProcessState::RUNNING,
      |     ^~~~~~~~~~~~
os_interface.cpp:63:5: error: 'ProcessState' has not been declared
   63 |     ProcessState::FINISHED,
      |     ^~~~~~~~~~~~
os_interface.cpp:64:5: error: 'ProcessState' has not been declared
   64 |     ProcessState::TERMINATED
      |     ^~~~~~~~~~~~
os_interface.cpp:59:40: error: scalar object 'stateOrder' requires one element in initializer
   59 | static const std::vector<ProcessState> stateOrder = {
      |                                        ^~~~~~~~~~
os_interface.cpp:76:1: error: 'ICommand' does not name a type
   76 | ICommand* generateRandomInstruction() {
      | ^~~~~~~~
os_interface.cpp: In function 'Process* create_new_process(std::string)':
os_interface.cpp:138:13: error: invalid use of incomplete type 'class Process'
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |             ^~
In file included from os_interface.cpp:5:
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:138:46: error: 'ICommand' was not declared in this scope
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |                                              ^~~~~~~~
os_interface.cpp:138:54: error: template argument 1 is invalid
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |                                                      ^
os_interface.cpp:138:54: error: template argument 2 is invalid
os_interface.cpp:138:56: error: 'generateRandomInstruction' was not declared in this scope
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~
os_interface.cpp:141:12: error: invalid use of incomplete type 'class Process'
  141 |     raw_ptr->setBurstTime(); // calc burst time
      |            ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:142:12: error: invalid use of incomplete type 'class Process'
  142 |     raw_ptr->setRemainingBurst(raw_ptr->getBurstTime());
      |            ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:142:39: error: invalid use of incomplete type 'class Process'
  142 |     raw_ptr->setRemainingBurst(raw_ptr->getBurstTime());
      |                                       ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:145:5: error: 'os_scheduler' was not declared in this scope
  145 |     os_scheduler->addProcess(std::move(proc));
      |     ^~~~~~~~~~~~
os_interface.cpp: In function 'void initialize()':
os_interface.cpp:241:5: error: 'os_scheduler' was not declared in this scope
  241 |     os_scheduler = new Scheduler(scheduler_type, quantumcycles, g_memory_manager);
      |     ^~~~~~~~~~~~
os_interface.cpp:241:24: error: expected type-specifier before 'Scheduler'
  241 |     os_scheduler = new Scheduler(scheduler_type, quantumcycles, g_memory_manager);
      |                        ^~~~~~~~~
os_interface.cpp: In function 'void scheduler_start()':
os_interface.cpp:269:10: error: 'os_scheduler' was not declared in this scope
  269 |     if (!os_scheduler) {
      |          ^~~~~~~~~~~~
os_interface.cpp:275:5: error: 'os_scheduler' was not declared in this scope
  275 |     os_scheduler->startScheduler(num_cpu);
      |     ^~~~~~~~~~~~
os_interface.cpp: In lambda function:
os_interface.cpp:283:13: error: 'os_scheduler' is not captured
  283 |             os_scheduler->queueProcesses();
      |             ^~~~~~~~~~~~
os_interface.cpp:278:47: note: the lambda has no capture-default
  278 |     g_process_generator_thread = std::thread([]() {
      |                                               ^
os_interface.cpp:275:5: note: '<typeprefixerror>os_scheduler' declared here
  275 |     os_scheduler->startScheduler(num_cpu);
      |     ^~~~~~~~~~~~
os_interface.cpp: In function 'void scheduler_stop()':
os_interface.cpp:292:5: error: 'os_scheduler' was not declared in this scope
  292 |     os_scheduler->stopGenerating();
      |     ^~~~~~~~~~~~
os_interface.cpp: In function 'void accept_main_menu_input(std::string, OSState*, Process**)':
os_interface.cpp:343:13: error: invalid use of incomplete type 'class Process'
  343 |         proc->runScreenInterface();
      |             ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:346:14: error: 'os_scheduler' was not declared in this scope
  346 |         if (!os_scheduler) {
      |              ^~~~~~~~~~~~
os_interface.cpp:358:31: error: invalid use of incomplete type 'class Process'
  358 |                 proc_to_resume->getState() != ProcessState::FINISHED;
      |                               ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:358:47: error: 'ProcessState' has not been declared
  358 |                 proc_to_resume->getState() != ProcessState::FINISHED;
      |                                               ^~~~~~~~~~~~
os_interface.cpp:361:35: error: invalid use of incomplete type 'class Process'
  361 |                     proc_to_resume->runScreenInterface();
      |                                   ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:374:14: error: 'os_scheduler' was not declared in this scope
  374 |         if (!os_scheduler) {
      |              ^~~~~~~~~~~~
os_interface.cpp:396:22: error: 'ProcessState' was not declared in this scope
  396 |                 for (ProcessState state : stateOrder) {
      |                      ^~~~~~~~~~~~
os_interface.cpp:426:13: error: expected primary-expression before '}' token
  426 |             }
      |             ^
os_interface.cpp:425:18: error: expected ';' before '}' token
  425 |                 }
      |                  ^
      |                  ;
  426 |             }
      |             ~
os_interface.cpp:426:13: error: expected primary-expression before '}' token
  426 |             }
      |             ^
os_interface.cpp:425:18: error: expected ')' before '}' token
  425 |                 }
      |                  ^
      |                  )
  426 |             }
      |             ~
os_interface.cpp:396:21: note: to match this '('
  396 |                 for (ProcessState state : stateOrder) {
      |                     ^
os_interface.cpp:426:13: error: expected primary-expression before '}' token
  426 |             }
      |             ^
os_interface.cpp: In function 'void menu()':
os_interface.cpp:489:8: error: 'os_scheduler' was not declared in this scope
  489 |     if(os_scheduler != nullptr) {
      |        ^~~~~~~~~~~~
os_interface.cpp:495:9: error: type '<type error>' argument given to 'delete', expected pointer
  495 |         delete os_scheduler;
      |         ^~~~~~~~~~~~~~~~~~~
In file included from C:/mingw64/include/c++/15.1.0/bits/std_thread.h:45,
                 from C:/mingw64/include/c++/15.1.0/thread:47,
                 from os_interface.cpp:8:
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h: In instantiation of 'std::__detail::__unique_ptr_t<_Tp> std::make_unique(_Args&& ...) [with _Tp = Process; _Args = {int&, __cxx11::basic_string<char, char_traits<char>, allocator<char> >&, long long unsigned int, long long unsigned int}; __detail::__unique_ptr_t<_Tp> = __detail::__unique_ptr_t<Process>]':
os_interface.cpp:127:42:   required from here
  127 |     auto proc = std::make_unique<Process>(
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~^
  128 |         g_next_pid,
      |         ~~~~~~~~~~~
  129 |         name,
      |         ~~~~~
  130 |         static_cast<size_t>(mem_per_proc),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |         static_cast<size_t>(mem_per_frame)
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 |     );
      |     ~
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h:1085:30: error: invalid use of incomplete type 'class Process'
 1085 |     { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h: In instantiation of 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = Process]':
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h:399:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = Process; _Dp = std::default_delete<Process>]'
  399 |           get_deleter()(std::move(__ptr));
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
os_interface.cpp:127:42:   required from here
  127 |     auto proc = std::make_unique<Process>(
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~^
  128 |         g_next_pid,
      |         ~~~~~~~~~~~
  129 |         name,
      |         ~~~~~
  130 |         static_cast<size_t>(mem_per_proc),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |         static_cast<size_t>(mem_per_frame)
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 |     );
      |     ~
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h:91:23: error: invalid application of 'sizeof' to incomplete type 'Process'
   91 |         static_assert(sizeof(_Tp)>0,
      |                       ^~~~~~~~~~~
os_interface.cpp:44:1: error: 'Scheduler' does not name a type
   44 | Scheduler* os_scheduler = nullptr;
      | ^~~~~~~~~
os_interface.cpp:59:26: error: 'ProcessState' was not declared in this scope
   59 | static const std::vector<ProcessState> stateOrder = {
      |                          ^~~~~~~~~~~~
os_interface.cpp:59:38: error: template argument 1 is invalid
   59 | static const std::vector<ProcessState> stateOrder = {
      |                                      ^
os_interface.cpp:59:38: error: template argument 2 is invalid
os_interface.cpp:60:5: error: 'ProcessState' has not been declared
   60 |     ProcessState::IDLE,
      |     ^~~~~~~~~~~~
os_interface.cpp:61:5: error: 'ProcessState' has not been declared
   61 |     ProcessState::WAITING,
      |     ^~~~~~~~~~~~
os_interface.cpp:62:5: error: 'ProcessState' has not been declared
   62 |     ProcessState::RUNNING,
      |     ^~~~~~~~~~~~
os_interface.cpp:63:5: error: 'ProcessState' has not been declared
   63 |     ProcessState::FINISHED,
      |     ^~~~~~~~~~~~
os_interface.cpp:64:5: error: 'ProcessState' has not been declared
   64 |     ProcessState::TERMINATED
      |     ^~~~~~~~~~~~
os_interface.cpp:59:40: error: scalar object 'stateOrder' requires one element in initializer
   59 | static const std::vector<ProcessState> stateOrder = {
      |                                        ^~~~~~~~~~
os_interface.cpp:76:1: error: 'ICommand' does not name a type
   76 | ICommand* generateRandomInstruction() {
      | ^~~~~~~~
os_interface.cpp: In function 'Process* create_new_process(std::string)':
os_interface.cpp:138:13: error: invalid use of incomplete type 'class Process'
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |             ^~
In file included from os_interface.cpp:5:
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:138:46: error: 'ICommand' was not declared in this scope
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |                                              ^~~~~~~~
os_interface.cpp:138:54: error: template argument 1 is invalid
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |                                                      ^
os_interface.cpp:138:54: error: template argument 2 is invalid
os_interface.cpp:138:56: error: 'generateRandomInstruction' was not declared in this scope
  138 |         proc->addInstruction(std::unique_ptr<ICommand>(generateRandomInstruction()));
      |                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~
os_interface.cpp:141:12: error: invalid use of incomplete type 'class Process'
  141 |     raw_ptr->setBurstTime(); // calc burst time
      |            ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:142:12: error: invalid use of incomplete type 'class Process'
  142 |     raw_ptr->setRemainingBurst(raw_ptr->getBurstTime());
      |            ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:142:39: error: invalid use of incomplete type 'class Process'
  142 |     raw_ptr->setRemainingBurst(raw_ptr->getBurstTime());
      |                                       ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:145:5: error: 'os_scheduler' was not declared in this scope
  145 |     os_scheduler->addProcess(std::move(proc));
      |     ^~~~~~~~~~~~
os_interface.cpp: In function 'void initialize()':
os_interface.cpp:241:5: error: 'os_scheduler' was not declared in this scope
  241 |     os_scheduler = new Scheduler(scheduler_type, quantumcycles, g_memory_manager);
      |     ^~~~~~~~~~~~
os_interface.cpp:241:24: error: expected type-specifier before 'Scheduler'
  241 |     os_scheduler = new Scheduler(scheduler_type, quantumcycles, g_memory_manager);
      |                        ^~~~~~~~~
os_interface.cpp: In function 'void scheduler_start()':
os_interface.cpp:269:10: error: 'os_scheduler' was not declared in this scope
  269 |     if (!os_scheduler) {
      |          ^~~~~~~~~~~~
os_interface.cpp:275:5: error: 'os_scheduler' was not declared in this scope
  275 |     os_scheduler->startScheduler(num_cpu);
      |     ^~~~~~~~~~~~
os_interface.cpp: In lambda function:
os_interface.cpp:283:13: error: 'os_scheduler' is not captured
  283 |             os_scheduler->queueProcesses();
      |             ^~~~~~~~~~~~
os_interface.cpp:278:47: note: the lambda has no capture-default
  278 |     g_process_generator_thread = std::thread([]() {
      |                                               ^
os_interface.cpp:275:5: note: '<typeprefixerror>os_scheduler' declared here
  275 |     os_scheduler->startScheduler(num_cpu);
      |     ^~~~~~~~~~~~
os_interface.cpp: In function 'void scheduler_stop()':
os_interface.cpp:292:5: error: 'os_scheduler' was not declared in this scope
  292 |     os_scheduler->stopGenerating();
      |     ^~~~~~~~~~~~
os_interface.cpp: In function 'void accept_main_menu_input(std::string, OSState*, Process**)':
os_interface.cpp:343:13: error: invalid use of incomplete type 'class Process'
  343 |         proc->runScreenInterface();
      |             ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:346:14: error: 'os_scheduler' was not declared in this scope
  346 |         if (!os_scheduler) {
      |              ^~~~~~~~~~~~
os_interface.cpp:358:31: error: invalid use of incomplete type 'class Process'
  358 |                 proc_to_resume->getState() != ProcessState::FINISHED;
      |                               ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:358:47: error: 'ProcessState' has not been declared
  358 |                 proc_to_resume->getState() != ProcessState::FINISHED;
      |                                               ^~~~~~~~~~~~
os_interface.cpp:361:35: error: invalid use of incomplete type 'class Process'
  361 |                     proc_to_resume->runScreenInterface();
      |                                   ^~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
os_interface.cpp:374:14: error: 'os_scheduler' was not declared in this scope
  374 |         if (!os_scheduler) {
      |              ^~~~~~~~~~~~
os_interface.cpp:396:22: error: 'ProcessState' was not declared in this scope
  396 |                 for (ProcessState state : stateOrder) {
      |                      ^~~~~~~~~~~~
os_interface.cpp:426:13: error: expected primary-expression before '}' token
  426 |             }
      |             ^
os_interface.cpp:425:18: error: expected ';' before '}' token
  425 |                 }
      |                  ^
      |                  ;
  426 |             }
      |             ~
os_interface.cpp:426:13: error: expected primary-expression before '}' token
  426 |             }
      |             ^
os_interface.cpp:425:18: error: expected ')' before '}' token
  425 |                 }
      |                  ^
      |                  )
  426 |             }
      |             ~
os_interface.cpp:396:21: note: to match this '('
  396 |                 for (ProcessState state : stateOrder) {
      |                     ^
os_interface.cpp:426:13: error: expected primary-expression before '}' token
  426 |             }
      |             ^
os_interface.cpp: In function 'void menu()':
os_interface.cpp:489:8: error: 'os_scheduler' was not declared in this scope
  489 |     if(os_scheduler != nullptr) {
      |        ^~~~~~~~~~~~
os_interface.cpp:495:9: error: type '<type error>' argument given to 'delete', expected pointer
  495 |         delete os_scheduler;
      |         ^~~~~~~~~~~~~~~~~~~
In file included from C:/mingw64/include/c++/15.1.0/bits/std_thread.h:45,
                 from C:/mingw64/include/c++/15.1.0/thread:47,
                 from os_interface.cpp:8:
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h: In instantiation of 'std::__detail::__unique_ptr_t<_Tp> std::make_unique(_Args&& ...) [with _Tp = Process; _Args = {int&, __cxx11::basic_string<char, char_traits<char>, allocator<char> >&, long long unsigned int, long long unsigned int}; __detail::__unique_ptr_t<_Tp> = __detail::__unique_ptr_t<Process>]':
os_interface.cpp:127:42:   required from here
  127 |     auto proc = std::make_unique<Process>(
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~^
  128 |         g_next_pid,
      |         ~~~~~~~~~~~
  129 |         name,
      |         ~~~~~
  130 |         static_cast<size_t>(mem_per_proc),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |         static_cast<size_t>(mem_per_frame)
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 |     );
      |     ~
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h:1085:30: error: invalid use of incomplete type 'class Process'
 1085 |     { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
header.h:6:7: note: forward declaration of 'class Process'
    6 | class Process;
      |       ^~~~~~~
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h: In instantiation of 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = Process]':
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h:399:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = Process; _Dp = std::default_delete<Process>]'
  399 |           get_deleter()(std::move(__ptr));
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
os_interface.cpp:127:42:   required from here
  127 |     auto proc = std::make_unique<Process>(
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~^
  128 |         g_next_pid,
      |         ~~~~~~~~~~~
  129 |         name,
      |         ~~~~~
  130 |         static_cast<size_t>(mem_per_proc),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |         static_cast<size_t>(mem_per_frame)
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 |     );
      |     ~
C:/mingw64/include/c++/15.1.0/bits/unique_ptr.h:91:23: error: invalid application of 'sizeof' to incomplete type 'Process'
   91 |         static_assert(sizeof(_Tp)>0,
      |                       ^~~~~~~~~~~